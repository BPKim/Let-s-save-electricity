
AVRASM ver. 2.1.30  C:\Documents and Settings\¿Ã∞Ê≥≤\My Documents\LKproduct\product\AVR\LK_AVR-C\Firmware\UART0_RS232\List\UART0_RS232.asm Thu Jul 28 14:02:55 2011

                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 16.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 005f 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
000046 2710
000047 03e8
000048 0064
000049 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00004a 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00004b 1000
00004c 0100
00004d 0010
00004e 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
00004f 4b4c
000050 412d
000051 6d54
000052 6765      	.DB  0x4C,0x4B,0x2D,0x41,0x54,0x6D,0x65,0x67
000053 3161
000054 3832
000055 432d
000056 5220      	.DB  0x61,0x31,0x32,0x38,0x2D,0x43,0x20,0x52
000057 3253
000058 3233
000059 4320
00005a 6d6f      	.DB  0x53,0x32,0x33,0x32,0x20,0x43,0x6F,0x6D
00005b 5420
00005c 7365
00005d 0d74
00005e 000a      	.DB  0x20,0x54,0x65,0x73,0x74,0xD,0xA,0x0
                 __RESET:
00005f 94f8      	CLI
000060 27ee      	CLR  R30
000061 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000062 e0f1      	LDI  R31,1
000063 bff5      	OUT  MCUCR,R31
000064 bfe5      	OUT  MCUCR,R30
000065 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
000067 e1f8      	LDI  R31,0x18
000068 bdf1      	OUT  WDTCR,R31
000069 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
00006a e08d      	LDI  R24,(14-2)+1
00006b e0a2      	LDI  R26,2
00006c 27bb      	CLR  R27
                 __CLEAR_REG:
00006d 93ed      	ST   X+,R30
00006e 958a      	DEC  R24
00006f f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000070 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000071 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000072 e0a0      	LDI  R26,LOW(__SRAM_START)
000073 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000074 93ed      	ST   X+,R30
000075 9701      	SBIW R24,1
000076 f7e9      	BRNE __CLEAR_SRAM
                 
000077 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000078 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000079 bfed      	OUT  SPL,R30
00007a e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00007b bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00007c e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00007d e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00007e 940c 0080 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*
                 ;Project : RS232 º€Ω≈ ≈◊Ω∫∆Æ
                 ;Version : ATmega128-C V01
                 ;Date    : 2011-07-28
                 ;Author  : Kyung Nam Lee
                 ;Company : LKEMBEDDED
                 ;*/
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;// Standard Input/Output functions
                 ;#include <stdio.h>
                 ;
                 ;void main(void)
                 ; 0000 000D {
                 
                 	.CSEG
                 _main:
                 ; 0000 000E 
                 ; 0000 000F // USART0 initialization
                 ; 0000 0010 // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0011 // USART0 Receiver: Off
                 ; 0000 0012 // USART0 Transmitter: On
                 ; 0000 0013 // USART0 Mode: Asynchronous
                 ; 0000 0014 // USART0 Baud Rate: 9600
                 ; 0000 0015 UCSR0A=0x00;
000080 e0e0      	LDI  R30,LOW(0)
000081 b9eb      	OUT  0xB,R30
                 ; 0000 0016 UCSR0B=0x08;
000082 e0e8      	LDI  R30,LOW(8)
000083 b9ea      	OUT  0xA,R30
                 ; 0000 0017 UCSR0C=0x06;
000084 e0e6      	LDI  R30,LOW(6)
000085 93e0 0095 	STS  149,R30
                 ; 0000 0018 UBRR0H=0x00;
000087 e0e0      	LDI  R30,LOW(0)
000088 93e0 0090 	STS  144,R30
                 ; 0000 0019 UBRR0L=0x67;
00008a e6e7      	LDI  R30,LOW(103)
00008b b9e9      	OUT  0x9,R30
                 ; 0000 001A while (1)
                 _0x3:
                 ; 0000 001B       {
                 ; 0000 001C         printf("LK-ATmega128-C RS232 Com Test\r\n");
                +
00008c e9ee     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00008d e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00008e 93fa      	ST   -Y,R31
00008f 93ea      	ST   -Y,R30
000090 e080      	LDI  R24,0
000091 940e 01dd 	CALL _printf
000093 9622      	ADIW R28,2
                 ; 0000 001D 
                 ; 0000 001E       }
000094 cff7      	RJMP _0x3
                 ; 0000 001F }
                 _0x6:
000095 cfff      	RJMP _0x6
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 putchar0:
000096 9b5d           sbis usr,udre
000097 cffe           rjmp putchar0
000098 81e8           ld   r30,y
000099 b9ec           out  udr,r30
00009a 9621      	ADIW R28,1
00009b 9508      	RET
                 _put_usart_G100:
00009c 81ea      	LDD  R30,Y+2
00009d 93ea      	ST   -Y,R30
00009e dff7      	RCALL _putchar
00009f 81a8      	LD   R26,Y
0000a0 81b9      	LDD  R27,Y+1
0000a1 91ed      	LD   R30,X+
0000a2 91fd      	LD   R31,X+
0000a3 9631      	ADIW R30,1
0000a4 93fe      	ST   -X,R31
0000a5 93ee      	ST   -X,R30
0000a6 9623      	ADIW R28,3
0000a7 9508      	RET
                 __print_G100:
0000a8 9726      	SBIW R28,6
0000a9 940e 0252 	CALL __SAVELOCR6
0000ab e010      	LDI  R17,0
0000ac 85ac      	LDD  R26,Y+12
0000ad 85bd      	LDD  R27,Y+12+1
0000ae e0e0      	LDI  R30,LOW(0)
0000af e0f0      	LDI  R31,HIGH(0)
0000b0 93ed      	ST   X+,R30
0000b1 93fc      	ST   X,R31
                 _0x2000016:
0000b2 89ea      	LDD  R30,Y+18
0000b3 89fb      	LDD  R31,Y+18+1
0000b4 9631      	ADIW R30,1
0000b5 8bea      	STD  Y+18,R30
0000b6 8bfb      	STD  Y+18+1,R31
0000b7 9731      	SBIW R30,1
0000b8 91e4      	LPM  R30,Z
0000b9 2f2e      	MOV  R18,R30
0000ba 30e0      	CPI  R30,0
0000bb f411      	BRNE PC+3
0000bc 940c 01d5 	JMP _0x2000018
0000be 2fe1      	MOV  R30,R17
0000bf 30e0      	CPI  R30,0
0000c0 f439      	BRNE _0x200001C
0000c1 3225      	CPI  R18,37
0000c2 f411      	BRNE _0x200001D
0000c3 e011      	LDI  R17,LOW(1)
0000c4 c002      	RJMP _0x200001E
                 _0x200001D:
0000c5 940e 0219 	CALL SUBOPT_0x0
                 _0x200001E:
0000c7 c10c      	RJMP _0x200001B
                 _0x200001C:
0000c8 30e1      	CPI  R30,LOW(0x1)
0000c9 f4a9      	BRNE _0x200001F
0000ca 3225      	CPI  R18,37
0000cb f419      	BRNE _0x2000020
0000cc 940e 0219 	CALL SUBOPT_0x0
0000ce c104      	RJMP _0x20000C9
                 _0x2000020:
0000cf e012      	LDI  R17,LOW(2)
0000d0 e040      	LDI  R20,LOW(0)
0000d1 e000      	LDI  R16,LOW(0)
0000d2 322d      	CPI  R18,45
0000d3 f411      	BRNE _0x2000021
0000d4 e001      	LDI  R16,LOW(1)
0000d5 c0fe      	RJMP _0x200001B
                 _0x2000021:
0000d6 322b      	CPI  R18,43
0000d7 f411      	BRNE _0x2000022
0000d8 e24b      	LDI  R20,LOW(43)
0000d9 c0fa      	RJMP _0x200001B
                 _0x2000022:
0000da 3220      	CPI  R18,32
0000db f411      	BRNE _0x2000023
0000dc e240      	LDI  R20,LOW(32)
0000dd c0f6      	RJMP _0x200001B
                 _0x2000023:
0000de c002      	RJMP _0x2000024
                 _0x200001F:
0000df 30e2      	CPI  R30,LOW(0x2)
0000e0 f439      	BRNE _0x2000025
                 _0x2000024:
0000e1 e050      	LDI  R21,LOW(0)
0000e2 e013      	LDI  R17,LOW(3)
0000e3 3320      	CPI  R18,48
0000e4 f411      	BRNE _0x2000026
0000e5 6800      	ORI  R16,LOW(128)
0000e6 c0ed      	RJMP _0x200001B
                 _0x2000026:
0000e7 c004      	RJMP _0x2000027
                 _0x2000025:
0000e8 30e3      	CPI  R30,LOW(0x3)
0000e9 f011      	BREQ PC+3
0000ea 940c 01d4 	JMP _0x200001B
                 _0x2000027:
0000ec 3320      	CPI  R18,48
0000ed f010      	BRLO _0x200002A
0000ee 332a      	CPI  R18,58
0000ef f008      	BRLO _0x200002B
                 _0x200002A:
0000f0 c007      	RJMP _0x2000029
                 _0x200002B:
0000f1 e0aa      	LDI  R26,LOW(10)
0000f2 9f5a      	MUL  R21,R26
0000f3 2d50      	MOV  R21,R0
0000f4 2fe2      	MOV  R30,R18
0000f5 53e0      	SUBI R30,LOW(48)
0000f6 0f5e      	ADD  R21,R30
0000f7 c0dc      	RJMP _0x200001B
                 _0x2000029:
0000f8 2fe2      	MOV  R30,R18
0000f9 36e3      	CPI  R30,LOW(0x63)
0000fa f449      	BRNE _0x200002F
0000fb 940e 0222 	CALL SUBOPT_0x1
0000fd 89e8      	LDD  R30,Y+16
0000fe 89f9      	LDD  R31,Y+16+1
0000ff 81a4      	LDD  R26,Z+4
000100 93aa      	ST   -Y,R26
000101 940e 0228 	CALL SUBOPT_0x2
000103 c0cf      	RJMP _0x2000030
                 _0x200002F:
000104 37e3      	CPI  R30,LOW(0x73)
000105 f441      	BRNE _0x2000032
000106 940e 0222 	CALL SUBOPT_0x1
000108 940e 0230 	CALL SUBOPT_0x3
00010a 940e 0204 	CALL _strlen
00010c 2f1e      	MOV  R17,R30
00010d c00a      	RJMP _0x2000033
                 _0x2000032:
00010e 37e0      	CPI  R30,LOW(0x70)
00010f f461      	BRNE _0x2000035
000110 940e 0222 	CALL SUBOPT_0x1
000112 940e 0230 	CALL SUBOPT_0x3
000114 940e 020e 	CALL _strlenf
000116 2f1e      	MOV  R17,R30
000117 6008      	ORI  R16,LOW(8)
                 _0x2000033:
000118 6002      	ORI  R16,LOW(2)
000119 770f      	ANDI R16,LOW(127)
00011a e030      	LDI  R19,LOW(0)
00011b c035      	RJMP _0x2000036
                 _0x2000035:
00011c 36e4      	CPI  R30,LOW(0x64)
00011d f011      	BREQ _0x2000039
00011e 36e9      	CPI  R30,LOW(0x69)
00011f f411      	BRNE _0x200003A
                 _0x2000039:
000120 6004      	ORI  R16,LOW(4)
000121 c002      	RJMP _0x200003B
                 _0x200003A:
000122 37e5      	CPI  R30,LOW(0x75)
000123 f431      	BRNE _0x200003C
                 _0x200003B:
000124 e8ec      	LDI  R30,LOW(_tbl10_G100*2)
000125 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000126 83ee      	STD  Y+6,R30
000127 83ff      	STD  Y+6+1,R31
000128 e015      	LDI  R17,LOW(5)
000129 c00d      	RJMP _0x200003D
                 _0x200003C:
00012a 35e8      	CPI  R30,LOW(0x58)
00012b f411      	BRNE _0x200003F
00012c 6008      	ORI  R16,LOW(8)
00012d c004      	RJMP _0x2000040
                 _0x200003F:
00012e 37e8      	CPI  R30,LOW(0x78)
00012f f011      	BREQ PC+3
000130 940c 01d3 	JMP _0x2000071
                 _0x2000040:
000132 e9e6      	LDI  R30,LOW(_tbl16_G100*2)
000133 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000134 83ee      	STD  Y+6,R30
000135 83ff      	STD  Y+6+1,R31
000136 e014      	LDI  R17,LOW(4)
                 _0x200003D:
000137 ff02      	SBRS R16,2
000138 c014      	RJMP _0x2000042
000139 940e 0222 	CALL SUBOPT_0x1
00013b 940e 023a 	CALL SUBOPT_0x4
00013d 85ab      	LDD  R26,Y+11
00013e 23aa      	TST  R26
00013f f43a      	BRPL _0x2000043
000140 85ea      	LDD  R30,Y+10
000141 85fb      	LDD  R31,Y+10+1
000142 940e 0246 	CALL __ANEGW1
000144 87ea      	STD  Y+10,R30
000145 87fb      	STD  Y+10+1,R31
000146 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
000147 3040      	CPI  R20,0
000148 f011      	BREQ _0x2000044
000149 5f1f      	SUBI R17,-LOW(1)
00014a c001      	RJMP _0x2000045
                 _0x2000044:
00014b 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
00014c c004      	RJMP _0x2000046
                 _0x2000042:
00014d 940e 0222 	CALL SUBOPT_0x1
00014f 940e 023a 	CALL SUBOPT_0x4
                 _0x2000046:
                 _0x2000036:
000151 fd00      	SBRC R16,0
000152 c011      	RJMP _0x2000047
                 _0x2000048:
000153 1715      	CP   R17,R21
000154 f478      	BRSH _0x200004A
000155 ff07      	SBRS R16,7
000156 c008      	RJMP _0x200004B
000157 ff02      	SBRS R16,2
000158 c004      	RJMP _0x200004C
000159 7f0b      	ANDI R16,LOW(251)
00015a 2f24      	MOV  R18,R20
00015b 5011      	SUBI R17,LOW(1)
00015c c001      	RJMP _0x200004D
                 _0x200004C:
00015d e320      	LDI  R18,LOW(48)
                 _0x200004D:
00015e c001      	RJMP _0x200004E
                 _0x200004B:
00015f e220      	LDI  R18,LOW(32)
                 _0x200004E:
000160 940e 0219 	CALL SUBOPT_0x0
000162 5051      	SUBI R21,LOW(1)
000163 cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
000164 2f31      	MOV  R19,R17
000165 ff01      	SBRS R16,1
000166 c017      	RJMP _0x200004F
                 _0x2000050:
000167 3030      	CPI  R19,0
000168 f0a1      	BREQ _0x2000052
000169 ff03      	SBRS R16,3
00016a c006      	RJMP _0x2000053
00016b 81ee      	LDD  R30,Y+6
00016c 81ff      	LDD  R31,Y+6+1
00016d 9125      	LPM  R18,Z+
00016e 83ee      	STD  Y+6,R30
00016f 83ff      	STD  Y+6+1,R31
000170 c005      	RJMP _0x2000054
                 _0x2000053:
000171 81ae      	LDD  R26,Y+6
000172 81bf      	LDD  R27,Y+6+1
000173 912d      	LD   R18,X+
000174 83ae      	STD  Y+6,R26
000175 83bf      	STD  Y+6+1,R27
                 _0x2000054:
000176 940e 0219 	CALL SUBOPT_0x0
000178 3050      	CPI  R21,0
000179 f009      	BREQ _0x2000055
00017a 5051      	SUBI R21,LOW(1)
                 _0x2000055:
00017b 5031      	SUBI R19,LOW(1)
00017c cfea      	RJMP _0x2000050
                 _0x2000052:
00017d c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
00017e e320      	LDI  R18,LOW(48)
00017f 81ee      	LDD  R30,Y+6
000180 81ff      	LDD  R31,Y+6+1
000181 940e 024e 	CALL __GETW1PF
000183 87e8      	STD  Y+8,R30
000184 87f9      	STD  Y+8+1,R31
000185 81ee      	LDD  R30,Y+6
000186 81ff      	LDD  R31,Y+6+1
000187 9632      	ADIW R30,2
000188 83ee      	STD  Y+6,R30
000189 83ff      	STD  Y+6+1,R31
                 _0x200005A:
00018a 85e8      	LDD  R30,Y+8
00018b 85f9      	LDD  R31,Y+8+1
00018c 85aa      	LDD  R26,Y+10
00018d 85bb      	LDD  R27,Y+10+1
00018e 17ae      	CP   R26,R30
00018f 07bf      	CPC  R27,R31
000190 f050      	BRLO _0x200005C
000191 5f2f      	SUBI R18,-LOW(1)
000192 85a8      	LDD  R26,Y+8
000193 85b9      	LDD  R27,Y+8+1
000194 85ea      	LDD  R30,Y+10
000195 85fb      	LDD  R31,Y+10+1
000196 1bea      	SUB  R30,R26
000197 0bfb      	SBC  R31,R27
000198 87ea      	STD  Y+10,R30
000199 87fb      	STD  Y+10+1,R31
00019a cfef      	RJMP _0x200005A
                 _0x200005C:
00019b 332a      	CPI  R18,58
00019c f028      	BRLO _0x200005D
00019d ff03      	SBRS R16,3
00019e c002      	RJMP _0x200005E
00019f 5f29      	SUBI R18,-LOW(7)
0001a0 c001      	RJMP _0x200005F
                 _0x200005E:
0001a1 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
0001a2 fd04      	SBRC R16,4
0001a3 c01a      	RJMP _0x2000061
0001a4 3321      	CPI  R18,49
0001a5 f420      	BRSH _0x2000063
0001a6 85a8      	LDD  R26,Y+8
0001a7 85b9      	LDD  R27,Y+8+1
0001a8 9711      	SBIW R26,1
0001a9 f409      	BRNE _0x2000062
                 _0x2000063:
0001aa c009      	RJMP _0x20000CA
                 _0x2000062:
0001ab 1753      	CP   R21,R19
0001ac f010      	BRLO _0x2000067
0001ad ff00      	SBRS R16,0
0001ae c001      	RJMP _0x2000068
                 _0x2000067:
0001af c013      	RJMP _0x2000066
                 _0x2000068:
0001b0 e220      	LDI  R18,LOW(32)
0001b1 ff07      	SBRS R16,7
0001b2 c00b      	RJMP _0x2000069
0001b3 e320      	LDI  R18,LOW(48)
                 _0x20000CA:
0001b4 6100      	ORI  R16,LOW(16)
0001b5 ff02      	SBRS R16,2
0001b6 c007      	RJMP _0x200006A
0001b7 7f0b      	ANDI R16,LOW(251)
0001b8 934a      	ST   -Y,R20
0001b9 940e 0228 	CALL SUBOPT_0x2
0001bb 3050      	CPI  R21,0
0001bc f009      	BREQ _0x200006B
0001bd 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
0001be 940e 0219 	CALL SUBOPT_0x0
0001c0 3050      	CPI  R21,0
0001c1 f009      	BREQ _0x200006C
0001c2 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
0001c3 5031      	SUBI R19,LOW(1)
0001c4 85a8      	LDD  R26,Y+8
0001c5 85b9      	LDD  R27,Y+8+1
0001c6 9712      	SBIW R26,2
0001c7 f008      	BRLO _0x2000059
0001c8 cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
0001c9 ff00      	SBRS R16,0
0001ca c008      	RJMP _0x200006D
                 _0x200006E:
0001cb 3050      	CPI  R21,0
0001cc f031      	BREQ _0x2000070
0001cd 5051      	SUBI R21,LOW(1)
0001ce e2e0      	LDI  R30,LOW(32)
0001cf 93ea      	ST   -Y,R30
0001d0 940e 0228 	CALL SUBOPT_0x2
0001d2 cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000C9:
0001d3 e010      	LDI  R17,LOW(0)
                 _0x200001B:
0001d4 cedd      	RJMP _0x2000016
                 _0x2000018:
0001d5 85ac      	LDD  R26,Y+12
0001d6 85bd      	LDD  R27,Y+12+1
0001d7 940e 024a 	CALL __GETW1P
0001d9 940e 0259 	CALL __LOADLOCR6
0001db 9664      	ADIW R28,20
0001dc 9508      	RET
                 _printf:
0001dd 92ff      	PUSH R15
0001de 2ef8      	MOV  R15,R24
0001df 9726      	SBIW R28,6
0001e0 931a      	ST   -Y,R17
0001e1 930a      	ST   -Y,R16
0001e2 01de      	MOVW R26,R28
0001e3 9614      	ADIW R26,4
0001e4 940e 0242 	CALL __ADDW2R15
0001e6 018d      	MOVW R16,R26
0001e7 e0e0      	LDI  R30,LOW(0)
0001e8 83ec      	STD  Y+4,R30
0001e9 83ed      	STD  Y+4+1,R30
0001ea 83ee      	STD  Y+6,R30
0001eb 83ef      	STD  Y+6+1,R30
0001ec 01de      	MOVW R26,R28
0001ed 9618      	ADIW R26,8
0001ee 940e 0242 	CALL __ADDW2R15
0001f0 940e 024a 	CALL __GETW1P
0001f2 93fa      	ST   -Y,R31
0001f3 93ea      	ST   -Y,R30
0001f4 931a      	ST   -Y,R17
0001f5 930a      	ST   -Y,R16
0001f6 e9ec      	LDI  R30,LOW(_put_usart_G100)
0001f7 e0f0      	LDI  R31,HIGH(_put_usart_G100)
0001f8 93fa      	ST   -Y,R31
0001f9 93ea      	ST   -Y,R30
0001fa 01fe      	MOVW R30,R28
0001fb 9638      	ADIW R30,8
0001fc 93fa      	ST   -Y,R31
0001fd 93ea      	ST   -Y,R30
0001fe dea9      	RCALL __print_G100
0001ff 8119      	LDD  R17,Y+1
000200 8108      	LDD  R16,Y+0
000201 9628      	ADIW R28,8
000202 90ff      	POP  R15
000203 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
000204 91a9          ld   r26,y+
000205 91b9          ld   r27,y+
000206 27ee          clr  r30
000207 27ff          clr  r31
                 strlen0:
000208 916d          ld   r22,x+
000209 2366          tst  r22
00020a f011          breq strlen1
00020b 9631          adiw r30,1
00020c cffb          rjmp strlen0
                 strlen1:
00020d 9508          ret
                 _strlenf:
00020e 27aa          clr  r26
00020f 27bb          clr  r27
000210 91e9          ld   r30,y+
000211 91f9          ld   r31,y+
                 strlenf0:
000212 9005      	lpm  r0,z+
000213 2000          tst  r0
000214 f011          breq strlenf1
000215 9611          adiw r26,1
000216 cffb          rjmp strlenf0
                 strlenf1:
000217 01fd          movw r30,r26
000218 9508          ret
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x0:
000219 932a      	ST   -Y,R18
00021a 85ed      	LDD  R30,Y+13
00021b 85fe      	LDD  R31,Y+13+1
00021c 93fa      	ST   -Y,R31
00021d 93ea      	ST   -Y,R30
00021e 89e9      	LDD  R30,Y+17
00021f 89fa      	LDD  R31,Y+17+1
000220 9509      	ICALL
000221 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1:
000222 89e8      	LDD  R30,Y+16
000223 89f9      	LDD  R31,Y+16+1
000224 9734      	SBIW R30,4
000225 8be8      	STD  Y+16,R30
000226 8bf9      	STD  Y+16+1,R31
000227 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2:
000228 85ed      	LDD  R30,Y+13
000229 85fe      	LDD  R31,Y+13+1
00022a 93fa      	ST   -Y,R31
00022b 93ea      	ST   -Y,R30
00022c 89e9      	LDD  R30,Y+17
00022d 89fa      	LDD  R31,Y+17+1
00022e 9509      	ICALL
00022f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3:
000230 89a8      	LDD  R26,Y+16
000231 89b9      	LDD  R27,Y+16+1
000232 9614      	ADIW R26,4
000233 940e 024a 	CALL __GETW1P
000235 83ee      	STD  Y+6,R30
000236 83ff      	STD  Y+6+1,R31
000237 93fa      	ST   -Y,R31
000238 93ea      	ST   -Y,R30
000239 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
00023a 89a8      	LDD  R26,Y+16
00023b 89b9      	LDD  R27,Y+16+1
00023c 9614      	ADIW R26,4
00023d 940e 024a 	CALL __GETW1P
00023f 87ea      	STD  Y+10,R30
000240 87fb      	STD  Y+10+1,R31
000241 9508      	RET
                 
                 
                 	.CSEG
                 __ADDW2R15:
000242 2400      	CLR  R0
000243 0daf      	ADD  R26,R15
000244 1db0      	ADC  R27,R0
000245 9508      	RET
                 
                 __ANEGW1:
000246 95f1      	NEG  R31
000247 95e1      	NEG  R30
000248 40f0      	SBCI R31,0
000249 9508      	RET
                 
                 __GETW1P:
00024a 91ed      	LD   R30,X+
00024b 91fc      	LD   R31,X
00024c 9711      	SBIW R26,1
00024d 9508      	RET
                 
                 __GETW1PF:
00024e 9005      	LPM  R0,Z+
00024f 91f4      	LPM  R31,Z
000250 2de0      	MOV  R30,R0
000251 9508      	RET
                 
                 __SAVELOCR6:
000252 935a      	ST   -Y,R21
                 __SAVELOCR5:
000253 934a      	ST   -Y,R20
                 __SAVELOCR4:
000254 933a      	ST   -Y,R19
                 __SAVELOCR3:
000255 932a      	ST   -Y,R18
                 __SAVELOCR2:
000256 931a      	ST   -Y,R17
000257 930a      	ST   -Y,R16
000258 9508      	RET
                 
                 __LOADLOCR6:
000259 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00025a 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00025b 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00025c 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00025d 8119      	LDD  R17,Y+1
00025e 8108      	LD   R16,Y
00025f 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :   7 r1 :   0 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  30 r17:  19 r18:  27 r19:   8 r20:   9 r21:  17 r22:   2 r23:   0 
r24:   7 r25:   1 r26:  36 r27:  18 r28:  11 r29:   1 r30: 109 r31:  51 
x  :  12 y  : 118 z  :   6 
Registers used: 20 out of 35 (57.1%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   2 
adiw  :  15 and   :   0 andi  :   4 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  11 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   6 
brlt  :   0 brmi  :   0 brne  :  19 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  30 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   7 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   3 cpc   :   1 cpi   :  29 cpse  :   0 dec   :   1 des   :   0 
elpm  :   0 eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 
ijmp  :   0 in    :   0 inc   :   0 jmp   :  39 ld    :  13 ldd   :  55 
ldi   :  51 lds   :   0 lpm   :   7 lsl   :   0 lsr   :   0 mov   :  11 
movw  :   5 mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 
or    :   0 ori   :   6 out   :  12 pop   :   1 push  :   1 rcall :   2 
ret   :  17 reti  :   0 rjmp  :  49 rol   :   0 ror   :   0 sbc   :   1 
sbci  :   1 sbi   :   0 sbic  :   0 sbis  :   1 sbiw  :   8 sbr   :   0 
sbrc  :   2 sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 
ser   :   0 ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    :  35 std   :  28 sts   :   3 sub   :   1 subi  :  13 
swap  :   0 tst   :   3 wdr   :   0 
Instructions used: 45 out of 117 (38.5%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0004c0   1166     50   1216  131072   0.9%
[.dseg] 0x000100 0x000500      0      0      0    4351   0.0%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 0 warnings
