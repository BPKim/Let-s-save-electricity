;/*
;Project : ADC VR10K Value Test
;Version : ATmega128-C V01
;Date    : 2011-07-28
;Author  : Kyung Nam Lee
;Company : LKEMBEDDED
;*/
;
;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;// Standard Input/Output functions
;#include <stdio.h>
;#include <delay.h>
;
;#define ADC_VREF_TYPE 0x40
;
;// Read the AD conversion result
;unsigned int read_adc(unsigned char adc_input)
; 0000 0012 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0013 ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
;	adc_input -> Y+0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0014 // Delay needed for the stabilization of the ADC input voltage
; 0000 0015 delay_us(10);
;PCODE: $00000012 VOL: 0
; 0000 0016 // Start the AD conversion
; 0000 0017 ADCSRA|=0x40;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0018 // Wait for the AD conversion to complete
; 0000 0019 while ((ADCSRA & 0x10)==0);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 001A ADCSRA|=0x10;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 001B return ADCW;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 001C }
;PCODE: $00000020 VOL: 0
;
;// Declare your global variables here
;
;void main(void)
; 0000 0021 {
;PCODE: $00000021 VOL: 0
; 0000 0022 // USART0 initialization
; 0000 0023 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0024 // USART0 Receiver: Off
; 0000 0025 // USART0 Transmitter: On
; 0000 0026 // USART0 Mode: Asynchronous
; 0000 0027 // USART0 Baud Rate: 9600
; 0000 0028 UCSR0A=0x00;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0029 UCSR0B=0x08;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 002A UCSR0C=0x06;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 002B UBRR0H=0x00;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 002C UBRR0L=0x67;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 002D 
; 0000 002E // ADC initialization
; 0000 002F // ADC Clock frequency: 1000.000 kHz
; 0000 0030 // ADC Voltage Reference: AVCC pin
; 0000 0031 ADMUX=ADC_VREF_TYPE & 0xff;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0032 ADCSRA=0x84;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0033 
; 0000 0034 
; 0000 0035 while (1)
;PCODE: $00000030 VOL: 0
; 0000 0036       {
; 0000 0037       int data=0;
; 0000 0038       data=read_adc(0);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;	data -> Y+0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0039       printf("ADC VR10K Value: %d\r\n",data);
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 003A 
; 0000 003B       }
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 003C }
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
